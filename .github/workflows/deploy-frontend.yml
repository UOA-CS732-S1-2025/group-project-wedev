name: Build and Deploy Frontend to Static Web Apps

on:
  push:
    branches: [ "develop" ] # 或者你的主部署分支，如 "main"
    paths:
      - 'frontend/**'       # 仅当 frontend 文件夹下的文件发生变化时触发
      - '.github/workflows/deploy-frontend.yml' # 当此工作流文件本身发生变化时也触发 (可选)
  workflow_dispatch:      # 允许手动触发

env:
  FRONTEND_APP_LOCATION: './frontend'     # 指向你的前端代码文件夹
  FRONTEND_OUTPUT_LOCATION: 'dist'        # **已修改**: 前端构建输出的文件夹名 (Vite 通常是 'dist')
  NODE_VERSION_FRONTEND: '20.x'           # 前端构建所需的 Node.js 版本

permissions:
  contents: read # Job 需要读取代码

jobs:
  deploy_frontend:
    name: Build and Deploy Frontend to Static Web Apps
    runs-on: ubuntu-latest
    environment:
      name: 'Development_Frontend' # 前端部署环境的名称
      url: ${{ steps.deploy-to-swa.outputs.static_web_app_url }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js for Frontend Build ${{ env.NODE_VERSION_FRONTEND }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION_FRONTEND }}
        cache: 'npm'
        cache-dependency-path: '${{ env.FRONTEND_APP_LOCATION }}/package-lock.json'

    - name: Install frontend dependencies and build
      working-directory: ${{ env.FRONTEND_APP_LOCATION }}
      env:
        VITE_API_URL: ${{ secrets.API_BASE_URL }}
      run: |
        echo "VITE_API_URL from secret is: ${{ secrets.API_BASE_URL }}"
        npm install
        npm run build

    - name: Deploy to Azure Static Web Apps
      id: deploy-to-swa
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }} # **SWA的部署令牌机密**
        repo_token: ${{ secrets.GITHUB_TOKEN }} # GitHub 自动提供的令牌
        action: "upload"
        # 以下路径相对于仓库根目录
        app_location: ${{ env.FRONTEND_APP_LOCATION }}      # 前端应用的源文件路径
        output_location: ${{ env.FRONTEND_OUTPUT_LOCATION }} # 构建输出的静态文件路径 (相对于 app_location)
        # api_location: "" # 由于你的 API 是独立的 App Service，这里通常留空。