name: Deploy Backend to Azure App Service (SPN)

on:
  push:
    branches: [ "develop" ] # 或者你的主部署分支，如 "main"
    paths:
  workflow_dispatch:    # 允许手动触发

env:
  AZURE_WEBAPP_NAME: 'wedev'       # 替换为你的 Azure App Service 名称
  AZURE_WEBAPP_PACKAGE_PATH: './backend' # 指向你的后端代码文件夹
  NODE_VERSION: '20.x'               # 替换为你的 Node.js 版本

permissions:
  contents: read # build job 需要读取代码

jobs:
  build:
    name: Build Backend Artifact
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/package-lock.json'

    - name: Install dependencies, build, and test in backend
      working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      run: |
        npm install
        npm run build --if-present # 如果你有构建脚本
        npm run test --if-present  # 如果你有测试脚本

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: node-app # 构建产物的名称
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }} # 上传 backend 文件夹的内容

  deploy:
    name: Deploy Backend to Azure
    permissions:
      contents: none # deploy job 不需要直接读取代码内容，它使用 artifact
      # id-token: write # 如果未来使用 OIDC/Workload Identity Federation，则需要此权限
    runs-on: ubuntu-latest
    needs: build # 依赖 build 作业完成
    environment:
      name: 'Development' # 部署环境的名称
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }} # 部署后的 URL

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: node-app # 与 build job 中上传的产物名称一致
        # 下载后，产物内容会直接放在当前工作目录的根

    - name: Login to Azure using Service Principal
      uses: azure/login@v2 # 使用 Azure Login Action
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} # **使用你存储 SPN JSON 的机密**
        # enable-AzPSSession: true # 如果后续步骤需要 Azure PowerShell，可以启用

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v3 # 建议使用较新版本，如 v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: . # **部署当前工作目录的内容 (即下载的构建产物)**
        # 注意：这里不再使用 publish-profile 参数

    - name: Logout from Azure
      # 部署完成后登出 Azure (可选但推荐，尤其是在共享 runner 上)
      run: |
        az logout
        az account clear
      if: always() # 确保即使前面的步骤失败也执行登出
